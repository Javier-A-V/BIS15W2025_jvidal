install.packages("shiny")
library(shiny)
install.packages("shiny")
library("tidyverse")
library("palmerpenguins")
runApp("plot_iris.R")
runExample("04_mpg")
runExample("11_timer")
penguins %>%
ggplot(aes(x=bill_length_mm, y=body_mass_g))+
geom_point(na.rm=T)
library(shiny)
ui <- fluidPage(
selectInput("x", #we are naming the select input "x"
"Select X Variable", #this is what we want the user to see
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("x", #we are naming the select input "x"
"Select X Variable", #this is what we want the user to see
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
selectInput("y", #we are naming the select input "y"
library(shiny)
ui <- fluidPage(
selectInput("x", #we are naming the select input "x"
"Select X Variable", #this is what we want the user to see
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
selectInput("y", #we are naming the select input "y"
library(shiny)
ui <- fluidPage(
selectInput("x", #we are naming the select input "x"
"Select X Variable", #this is what we want the user to see
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", #we are naming the select input "y"
"Select Y Variable", #this is what we want the user to see
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
) #closes the fluid page
server <- function(input, output, session) {
}
shinyApp(ui, server)
penguins %>%
ggplot(aes(x=bill_length_mm, y=body_mass_g, color=species))+
geom_point(na.rm=T)+
theme_light(base_size=14)
ui <- fluidPage(
selectInput("x",
"Select X Variable",
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y",
"Select Y Variable",
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "body_mass_g")
)
server <- function(input, output, session) {
output$plot <- renderPlot({ #defining the output
ggplot(data=penguins,
aes_string(x = inout$x, y = input$y, color = "species"))+ #make sure to use aes_string
geom_point(na.rm = T)+
theme_light(base_size=14)
})
}
shinyApp(ui, server)
penguins <- penguins
ui <- fluidPage(
selectInput("x",
"Select X Variable",
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y",
"Select Y Variable",
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "body_mass_g"),
plotOutput("plot", width = "500px.", height = "400px")
)
penguins <- penguins
ui <- fluidPage(
selectInput("x",
"Select X Variable",
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y",
"Select Y Variable",
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "body_mass_g"),
plotOutput("plot", width = "500px.", height = "400px"),
)
penguins <- penguins
ui <- fluidPage(
selectInput("x",
"Select X Variable",
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y",
"Select Y Variable",
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "body_mass_g"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({ #defining the output
ggplot(data=penguins,
aes_string(x = inout$x, y = input$y, color = "species"))+ #make sure to use aes_string
geom_point(na.rm = T)+
theme_light(base_size=14)
})
}
shinyApp(ui, server)
penguins <- penguins
ui <- fluidPage(
selectInput("x",
"Select X Variable",
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y",
"Select Y Variable",
choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "body_mass_g"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({ #defining the output
ggplot(data=penguins,
aes_string(x = input$x, y = input$y, color = "species"))+ #make sure to use aes_string
geom_point(na.rm = T)+
theme_light(base_size=14)
})
}
shinyApp(ui, server)
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange %>%
ggplot(aes(x=locomotion, fill=trophic.guild))+
geom_bar(position="dodge")
homerange %>%
ggplot(aes(x=locomotion, fill=thermoregulation))+
geom_bar(position="dodge")
library(shiny)
ui <- fluidPage(
selectInput("x",
"Select Fill Variable",
choices = c("thermoregulation", "locomotion"),
selected = "thermoregulation"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({ #defining the output
ggplot(data=homerange,
aes_string(x = input$x))+ #make sure to use aes_string
geom_bar(position = "dodge")+
theme_light(base_size=14)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("x",
"Select Fill Variable",
choices = c("thermoregulation", "locomotion"),
selected = "thermoregulation"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({ #defining the output
ggplot(data=homerange,
aes_string(x = input$x))+ #make sure to use aes_string
geom_bar(position = "dodge")+
theme_light(base_size=14)
})
}
shinyApp(ui, server)
View(homerange)
library(shiny)
ui <- fluidPage(
selectInput("x",
"Select Fill Variable",
choices = c("thermoregulation", "locomotion"),
selected = "thermoregulation"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({ #defining the output
ggplot(data=homerange,
aes_string(x = input$x, color = "species"))+ #make sure to use aes_string
geom_bar(position = "dodge")+
theme_light(base_size=14)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
radioButtons("x",
"Select Fill Variable"
choices = c("trophic.guild", "thermoregulation"),
library(shiny)
ui <- fluidPage(
radioButtons("x",
"Select Fill Variable"
choices = c("trophic.guild", "thermoregulation"),
library(shiny)
ui <- fluidPage(
radioButtons("x",
"Select Fill Variable"
choices = c("trophic.guild", "thermoregulation"),
library(shiny)
ui <- fluidPage(
radioButtons("x",
"Select Fill Variable",
choices = c("trophic.guild", "thermoregulation"),
selected = "trophic.guild"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({ #defining the output
ggplot(data=homerange,
aes_string(x = "locomotion", fill = input$x))+ #make sure to use aes_string
geom_bar(position = "dodge", alpha = 0.8, color = "black")+
theme_light(base_size=14)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
radioButtons("x",
"Select Fill Variable",
choices = c("trophic.guild", "thermoregulation"),
selected = "trophic.guild"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({ #defining the output
ggplot(data=homerange,
aes_string(x = "locomotion", fill = input$x))+ #make sure to use aes_string
geom_bar(position = "dodge", alpha = 0.8, color = "black")+
theme_light(base_size=14)
})
}
shinyApp(ui, server)
install.packages("shinydashboard")
library(tidyverse)
library(shiny)
library(shinydashboard)
require(janitor)
library(palmerpenguins)
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
runApp('Homerange_app.R')
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Hoerange by Taxon"),
selectInput("x",
"Select Taxon",
choices=unique(homerange$taxon),
selected = "birds"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(tidyverse)
library(shiny)
library(shinydashboard)
require(janitor)
library(palmerpenguins)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
selectInput("x",
"Select Taxon",
choices=unique(homerange$taxon),
selected = "birds"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange %>%
filter(taxon==input$x) %>%
ggplot(aes(x=log10.hra))+
geom_density(fill = "steelblue", alpha = 0.6, color = "black")
})
}
shinyApp(ui, server)
runApp('csv_cleaner_app.R')
library(shiny)
ui <- fluidPage(
selectInput("x",
"Select X Variable"
choices=c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
library(shiny)
ui <- fluidPage(
selectInput("x",
"Select X Variable",
choices=c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x",
"Select X Variable",
choices=c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y",
"Select Y Variable",
choices=c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
sliderInput("pointsize", "Select the Pointsize", min = 0.5, max = 3, value = 1, step = 0.5),
plotOutput("plot")
)
library(shiny)
ui <- fluidPage(
selectInput("x",
"Select X Variable",
choices=c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y",
"Select Y Variable",
choices=c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
sliderInput("pointsize", "Select the Pointsize", min = 0.5, max = 3, value = 1, step = 0.5),
plotOutput("plot")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("x",
"Select X Variable",
choices=c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y",
"Select Y Variable",
choices=c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
sliderInput("pointsize", "Select the Pointsize", min = 0.5, max = 3, value = 1, step = 0.5),
plotOutput("plot")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(data=penguins,
aes_string(x=input$x, y = input$y, color = "species"))+
geom_point(size - input$pointsize)+
theme_light(base_size=14)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("x",
"Select X Variable",
choices=c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y",
"Select Y Variable",
choices=c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
sliderInput("pointsize", "Select the Pointsize", min = 0.5, max = 3, value = 1, step = 0.5),
plotOutput("plot")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(data=penguins,
aes_string(x=input$x, y = input$y, color = "species"))+
geom_point(size = input$pointsize)+
theme_light(base_size=14)
})
}
shinyApp(ui, server)
