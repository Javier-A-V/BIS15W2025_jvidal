ggplot(filtered_data(), aes(x = trophic_guild, y = moisture, fill = trophic_guild)) +
geom_boxplot() +
labs(title = "Moisture Levels by Trophic Guild", x = "Trophic Guild", y = "Moisture") +
theme_minimal()
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Dashboard"),
dashboardSidebar(
sidebarMenu( #adding to this sidebar menu would be useful for other plots
menuItem("Map", tabName = "map", icon = icon("map")),
menuItem("pH Plot", tabName = "ph_plot", icon = icon("chart-line")),
menuItem("Moisture Plot", tabName = "moisture_plot", icon = icon("chart-bar"))
),
# Inputs common across tabs
selectInput("nematode", "Select Trophic Guild(s):",
choices = unique(nematode$trophic_guild),
selected = unique(nematode$trophic_guild)[1],
multiple = TRUE),
sliderInput("pH_range", "Select pH Range:",
min = min(nematode$p_h, na.rm = TRUE),
max = max(nematode$p_h, na.rm = TRUE),
value = c(min(nematode$p_h, na.rm = TRUE), max(nematode$p_h, na.rm = TRUE))),
sliderInput("moisture_range", "Select Moisture Range:",
min = min(nematode$moisture, na.rm = TRUE),
max = max(nematode$moisture, na.rm = TRUE),
value = c(min(nematode$moisture, na.rm = TRUE), max(nematode$moisture, na.rm = TRUE))),
sliderInput("elevation_range", "Select Elevation Range:",
min = min(nematode$elevation, na.rm = TRUE),
max = max(nematode$elevation, na.rm = TRUE),
value = c(min(nematode$elevation, na.rm = TRUE), max(nematode$elevation, na.rm = TRUE)))
),
dashboardBody( #can include more tabs if needed here
tabItems(
tabItem(tabName = "map",
leafletOutput("nematode_map", height = 600)
),
tabItem(tabName = "ph_plot",
plotOutput("pH_plot", height = 500)
),
tabItem(tabName = "moisture_plot",
plotOutput("moisture_plot", height = 500)
)
)
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
# Create a color palette for trophic guilds
pal <- colorFactor(palette = "Set1", domain = nematode$trophic_guild)
# Filtered data based on user input, only include rows where percent > 0
filtered_data <- reactive({ #this is for the map
nematode %>%
filter(trophic_guild %in% input$nematode,
elevation >= input$elevation_range[1] & elevation <= input$elevation_range[2],
p_h >= input$pH_range[1] & p_h <= input$pH_range[2],
moisture >= input$moisture_range[1] & moisture <= input$moisture_range[2],
percent > 0)
})
# Interactive Leaflet Map
output$nematode_map <- renderLeaflet({
leaflet(filtered_data()) %>%
addTiles() %>%
addCircleMarkers(
~longitude, ~latitude,
color = ~pal(trophic_guild),
fillColor = ~pal(trophic_guild),
fillOpacity = 0.8,
popup = ~paste("Site:", site,
"<br>Trophic Guild:", trophic_guild,
"<br>Percent:", percent,
"<br>pH:", p_h,
"<br>Moisture:", moisture,
"<br>Elevation:", elevation,
"<br>Conductivity:", conductivity),
clusterOptions = markerClusterOptions()
) %>%
addLegend("topright",
pal = pal,
values = ~trophic_guild,
title = "Trophic Guild",
opacity = 1)
})
#this scatterplot and boxplot can be changed or can add more plots, make sure to add more tabs too
# Scatter Plot: pH vs. Nematode Enrichment Footprint
output$pH_plot <- renderPlot({
ggplot(filtered_data(), aes(x = p_h, y = enrichment_footprint, color = trophic_guild)) +
geom_point() +
labs(title = "pH vs. Enrichment Footprint", x = "Soil pH", y = "Enrichment Footprint") +
theme_minimal()
})
# Boxplot: Moisture vs. Trophic Guild Percentages
output$moisture_plot <- renderPlot({
ggplot(filtered_data(), aes(x = trophic_guild, y = moisture, fill = trophic_guild)) +
geom_boxplot() +
labs(title = "Moisture Levels by Trophic Guild", x = "Trophic Guild", y = "Moisture") +
theme_minimal()
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Dashboard"),
dashboardSidebar(
sidebarMenu( #adding to this sidebar menu would be useful for other plots
menuItem("Map", tabName = "map", icon = icon("map")),
menuItem("pH Plot", tabName = "ph_plot", icon = icon("chart-line")),
menuItem("Moisture Plot", tabName = "moisture_plot", icon = icon("chart-bar"))
),
# Inputs common across tabs
selectInput("nematode", "Select Trophic Guild(s):",
choices = unique(nematode$trophic_guild),
selected = unique(nematode$trophic_guild)[1],
multiple = TRUE),
sliderInput("pH_range", "Select pH Range:",
min = min(nematode$p_h, na.rm = TRUE),
max = max(nematode$p_h, na.rm = TRUE),
value = c(min(nematode$p_h, na.rm = TRUE), max(nematode$p_h, na.rm = TRUE))),
sliderInput("moisture_range", "Select Moisture Range:",
min = min(nematode$moisture, na.rm = TRUE),
max = max(nematode$moisture, na.rm = TRUE),
value = c(min(nematode$moisture, na.rm = TRUE), max(nematode$moisture, na.rm = TRUE))),
sliderInput("elevation_range", "Select Elevation Range:",
min = min(nematode$elevation, na.rm = TRUE),
max = max(nematode$elevation, na.rm = TRUE),
value = c(min(nematode$elevation, na.rm = TRUE), max(nematode$elevation, na.rm = TRUE)))
),
dashboardBody( #can include more tabs if needed here
tabItems(
tabItem(tabName = "map",
leafletOutput("nematode_map", height = 600)
),
tabItem(tabName = "ph_plot",
plotOutput("pH_plot", height = 500)
),
tabItem(tabName = "moisture_plot",
plotOutput("moisture_plot", height = 500)
)
)
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
# Create a color palette for trophic guilds
pal <- colorFactor(palette = c("#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00"),
domain = unique(nematode$trophic_guild))
# Filtered data based on user input, only include rows where percent > 0
filtered_data <- reactive({ #this is for the map
nematode %>%
filter(trophic_guild %in% input$nematode,
elevation >= input$elevation_range[1] & elevation <= input$elevation_range[2],
p_h >= input$pH_range[1] & p_h <= input$pH_range[2],
moisture >= input$moisture_range[1] & moisture <= input$moisture_range[2],
percent > 0)
})
# Interactive Leaflet Map
output$nematode_map <- renderLeaflet({
leaflet(filtered_data()) %>%
addTiles() %>%
addCircleMarkers(
~longitude, ~latitude,
color = ~pal(trophic_guild),
fillColor = ~pal(trophic_guild),
fillOpacity = 0.8,
popup = ~paste("Site:", site,
"<br>Trophic Guild:", trophic_guild,
"<br>Percent:", percent,
"<br>pH:", p_h,
"<br>Moisture:", moisture,
"<br>Elevation:", elevation,
"<br>Conductivity:", conductivity),
clusterOptions = markerClusterOptions()
) %>%
addLegend("topright",
pal = pal,
values = ~trophic_guild,
title = "Trophic Guild",
opacity = 1)
})
#this scatterplot and boxplot can be changed or can add more plots, make sure to add more tabs too
# Scatter Plot: pH vs. Nematode Enrichment Footprint
output$pH_plot <- renderPlot({
ggplot(filtered_data(), aes(x = p_h, y = enrichment_footprint, color = trophic_guild)) +
geom_point() +
labs(title = "pH vs. Enrichment Footprint", x = "Soil pH", y = "Enrichment Footprint") +
theme_minimal()
})
# Boxplot: Moisture vs. Trophic Guild Percentages
output$moisture_plot <- renderPlot({
ggplot(filtered_data(), aes(x = trophic_guild, y = moisture, fill = trophic_guild)) +
geom_boxplot() +
labs(title = "Moisture Levels by Trophic Guild", x = "Trophic Guild", y = "Moisture") +
theme_minimal()
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Dashboard"),
dashboardSidebar(
sidebarMenu( #adding to this sidebar menu would be useful for other plots
menuItem("Map", tabName = "map", icon = icon("map")),
menuItem("pH Plot", tabName = "ph_plot", icon = icon("chart-line")),
menuItem("Moisture Plot", tabName = "moisture_plot", icon = icon("chart-bar"))
),
# Inputs common across tabs
selectInput("nematode", "Select Trophic Guild(s):",
choices = unique(nematode$trophic_guild),
selected = unique(nematode$trophic_guild)[1],
multiple = TRUE),
sliderInput("pH_range", "Select pH Range:",
min = min(nematode$p_h, na.rm = TRUE),
max = max(nematode$p_h, na.rm = TRUE),
value = c(min(nematode$p_h, na.rm = TRUE), max(nematode$p_h, na.rm = TRUE))),
sliderInput("moisture_range", "Select Moisture Range:",
min = min(nematode$moisture, na.rm = TRUE),
max = max(nematode$moisture, na.rm = TRUE),
value = c(min(nematode$moisture, na.rm = TRUE), max(nematode$moisture, na.rm = TRUE))),
sliderInput("elevation_range", "Select Elevation Range:",
min = min(nematode$elevation, na.rm = TRUE),
max = max(nematode$elevation, na.rm = TRUE),
value = c(min(nematode$elevation, na.rm = TRUE), max(nematode$elevation, na.rm = TRUE)))
),
dashboardBody( #can include more tabs if needed here
tabItems(
tabItem(tabName = "map",
leafletOutput("nematode_map", height = 600)
),
tabItem(tabName = "ph_plot",
plotOutput("pH_plot", height = 500)
),
tabItem(tabName = "moisture_plot",
plotOutput("moisture_plot", height = 500)
)
)
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
# Create a color palette for trophic guilds
pal <- colorFactor(palette = c("#E41A1C", "#377EB8", "#FF7F00", "#984EA3", "#F1C40F"),
domain = unique(nematode$trophic_guild))
# Filtered data based on user input, only include rows where percent > 0
filtered_data <- reactive({ #this is for the map
nematode %>%
filter(trophic_guild %in% input$nematode,
elevation >= input$elevation_range[1] & elevation <= input$elevation_range[2],
p_h >= input$pH_range[1] & p_h <= input$pH_range[2],
moisture >= input$moisture_range[1] & moisture <= input$moisture_range[2],
percent > 0)
})
# Interactive Leaflet Map
output$nematode_map <- renderLeaflet({
leaflet(filtered_data()) %>%
addTiles() %>%
addCircleMarkers(
~longitude, ~latitude,
color = ~pal(trophic_guild),
fillColor = ~pal(trophic_guild),
fillOpacity = 0.8,
popup = ~paste("Site:", site,
"<br>Trophic Guild:", trophic_guild,
"<br>Percent:", percent,
"<br>pH:", p_h,
"<br>Moisture:", moisture,
"<br>Elevation:", elevation,
"<br>Conductivity:", conductivity),
clusterOptions = markerClusterOptions()
) %>%
addLegend("topright",
pal = pal,
values = ~trophic_guild,
title = "Trophic Guild",
opacity = 1)
})
#this scatterplot and boxplot can be changed or can add more plots, make sure to add more tabs too
# Scatter Plot: pH vs. Nematode Enrichment Footprint
output$pH_plot <- renderPlot({
ggplot(filtered_data(), aes(x = p_h, y = enrichment_footprint, color = trophic_guild)) +
geom_point() +
labs(title = "pH vs. Enrichment Footprint", x = "Soil pH", y = "Enrichment Footprint") +
theme_minimal()
})
# Boxplot: Moisture vs. Trophic Guild Percentages
output$moisture_plot <- renderPlot({
ggplot(filtered_data(), aes(x = trophic_guild, y = moisture, fill = trophic_guild)) +
geom_boxplot() +
labs(title = "Moisture Levels by Trophic Guild", x = "Trophic Guild", y = "Moisture") +
theme_minimal()
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Dashboard"),
dashboardSidebar(
sidebarMenu( #adding to this sidebar menu would be useful for other plots
menuItem("Map", tabName = "map", icon = icon("map")),
menuItem("pH Plot", tabName = "ph_plot", icon = icon("chart-line")),
menuItem("Moisture Plot", tabName = "moisture_plot", icon = icon("chart-bar"))
),
# Inputs common across tabs
selectInput("nematode", "Select Trophic Guild(s):",
choices = unique(nematode$trophic_guild),
selected = unique(nematode$trophic_guild)[1],
multiple = TRUE),
sliderInput("pH_range", "Select pH Range:",
min = min(nematode$p_h, na.rm = TRUE),
max = max(nematode$p_h, na.rm = TRUE),
value = c(min(nematode$p_h, na.rm = TRUE), max(nematode$p_h, na.rm = TRUE))),
sliderInput("moisture_range", "Select Moisture Range:",
min = min(nematode$moisture, na.rm = TRUE),
max = max(nematode$moisture, na.rm = TRUE),
value = c(min(nematode$moisture, na.rm = TRUE), max(nematode$moisture, na.rm = TRUE))),
sliderInput("elevation_range", "Select Elevation Range:",
min = min(nematode$elevation, na.rm = TRUE),
max = max(nematode$elevation, na.rm = TRUE),
value = c(min(nematode$elevation, na.rm = TRUE), max(nematode$elevation, na.rm = TRUE)))
),
dashboardBody( #can include more tabs if needed here
tabItems(
tabItem(tabName = "map",
leafletOutput("nematode_map", height = 600)
),
tabItem(tabName = "ph_plot",
plotOutput("pH_plot", height = 500)
),
tabItem(tabName = "moisture_plot",
plotOutput("moisture_plot", height = 500)
)
)
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
# Create a color palette for trophic guilds
pal <- colorFactor(palette = c("#E41A1C", "#377EB8", "#FF7F00", "#984EA3", "#F1C40F"),
domain = unique(nematode$trophic_guild))
# Filtered data based on user input, only include rows where percent > 0
filtered_data <- reactive({ #this is for the map
nematode %>%
filter(trophic_guild %in% input$nematode,
elevation >= input$elevation_range[1] & elevation <= input$elevation_range[2],
p_h >= input$pH_range[1] & p_h <= input$pH_range[2],
moisture >= input$moisture_range[1] & moisture <= input$moisture_range[2],
percent > 0)
})
# Interactive Leaflet Map
output$nematode_map <- renderLeaflet({
leaflet(filtered_data()) %>%
addTiles() %>%
addCircleMarkers(
~longitude, ~latitude,
color = ~pal(trophic_guild),
fillColor = ~pal(trophic_guild),
fillOpacity = 0.8,
popup = ~paste("Site:", site,
"<br>Trophic Guild:", trophic_guild,
"<br>Percent:", percent,
"<br>pH:", p_h,
"<br>Moisture:", moisture,
"<br>Elevation:", elevation,
"<br>Conductivity:", conductivity),
clusterOptions = markerClusterOptions(iconCreateFunction = JS(
"function(cluster) {",
"var childCount = cluster.getChildCount();",
"var c = 'marker-cluster-';",
"if (childCount < 10) {",
"    c += 'small';",
"} else if (childCount < 100) {",
"    c += 'medium';",
"} else {",
"    c += 'large';",
"}",
"return new L.DivIcon({",
"    html: '<div><span>' + childCount + '</span></div>',",
"    className: c,",
"    iconSize: new L.Point(40, 40)",
"});"
)
)
) %>%
addLegend("topright",
pal = pal,
values = ~trophic_guild,
title = "Trophic Guild",
opacity = 1)
})
#this scatterplot and boxplot can be changed or can add more plots, make sure to add more tabs too
# Scatter Plot: pH vs. Nematode Enrichment Footprint
output$pH_plot <- renderPlot({
ggplot(filtered_data(), aes(x = p_h, y = enrichment_footprint, color = trophic_guild)) +
geom_point() +
labs(title = "pH vs. Enrichment Footprint", x = "Soil pH", y = "Enrichment Footprint") +
theme_minimal()
})
# Boxplot: Moisture vs. Trophic Guild Percentages
output$moisture_plot <- renderPlot({
ggplot(filtered_data(), aes(x = trophic_guild, y = moisture, fill = trophic_guild)) +
geom_boxplot() +
labs(title = "Moisture Levels by Trophic Guild", x = "Trophic Guild", y = "Moisture") +
theme_minimal()
})
}
shinyApp(ui, server)
library(tidyverse)
library(shiny)
library(ggplot2)
library(shinydashboard)
library(dplyr)
library(readxl)
#install.packages("leaflet")
library(leaflet)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Dashboard"),
dashboardSidebar(
sidebarMenu( #adding to this sidebar menu would be useful for other plots
menuItem("Map", tabName = "map", icon = icon("map")),
menuItem("pH Plot", tabName = "ph_plot", icon = icon("chart-line")),
menuItem("Moisture Plot", tabName = "moisture_plot", icon = icon("chart-bar"))
),
# Inputs common across tabs
selectInput("nematode", "Select Trophic Guild(s):",
choices = unique(nematode$trophic_guild),
selected = unique(nematode$trophic_guild)[1],
multiple = TRUE),
sliderInput("pH_range", "Select pH Range:",
min = min(nematode$p_h, na.rm = TRUE),
max = max(nematode$p_h, na.rm = TRUE),
value = c(min(nematode$p_h, na.rm = TRUE), max(nematode$p_h, na.rm = TRUE))),
sliderInput("moisture_range", "Select Moisture Range:",
min = min(nematode$moisture, na.rm = TRUE),
max = max(nematode$moisture, na.rm = TRUE),
value = c(min(nematode$moisture, na.rm = TRUE), max(nematode$moisture, na.rm = TRUE))),
sliderInput("elevation_range", "Select Elevation Range:",
min = min(nematode$elevation, na.rm = TRUE),
max = max(nematode$elevation, na.rm = TRUE),
value = c(min(nematode$elevation, na.rm = TRUE), max(nematode$elevation, na.rm = TRUE)))
),
dashboardBody( #can include more tabs if needed here
tabItems(
tabItem(tabName = "map",
leafletOutput("nematode_map", height = 600)
),
tabItem(tabName = "ph_plot",
plotOutput("pH_plot", height = 500)
),
tabItem(tabName = "moisture_plot",
plotOutput("moisture_plot", height = 500)
)
)
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
# Create a color palette for trophic guilds
pal <- colorFactor(palette = c("#E41A1C", "#377EB8", "#FF7F00", "#984EA3", "#F1C40F"),
domain = unique(nematode$trophic_guild))
# Filtered data based on user input, only include rows where percent > 0
filtered_data <- reactive({ #this is for the map
nematode %>%
filter(trophic_guild %in% input$nematode,
elevation >= input$elevation_range[1] & elevation <= input$elevation_range[2],
p_h >= input$pH_range[1] & p_h <= input$pH_range[2],
moisture >= input$moisture_range[1] & moisture <= input$moisture_range[2],
percent > 0)
})
# Interactive Leaflet Map
output$nematode_map <- renderLeaflet({
leaflet(filtered_data()) %>%
addTiles() %>%
addCircleMarkers(
~longitude, ~latitude,
color = ~pal(trophic_guild),
fillColor = ~pal(trophic_guild),
fillOpacity = 0.8,
popup = ~paste("Site:", site,
"<br>Trophic Guild:", trophic_guild,
"<br>Percent:", percent,
"<br>pH:", p_h,
"<br>Moisture:", moisture,
"<br>Elevation:", elevation,
"<br>Conductivity:", conductivity),
clusterOptions = markerClusterOptions()
) %>%
addLegend("topright",
pal = pal,
values = ~trophic_guild,
title = "Trophic Guild",
opacity = 1)
})
#this scatterplot and boxplot can be changed or can add more plots, make sure to add more tabs too
# Scatter Plot: pH vs. Nematode Enrichment Footprint
output$pH_plot <- renderPlot({
ggplot(filtered_data(), aes(x = p_h, y = enrichment_footprint, color = trophic_guild)) +
geom_point() +
labs(title = "pH vs. Enrichment Footprint", x = "Soil pH", y = "Enrichment Footprint") +
theme_minimal()
})
# Boxplot: Moisture vs. Trophic Guild Percentages
output$moisture_plot <- renderPlot({
ggplot(filtered_data(), aes(x = trophic_guild, y = moisture, fill = trophic_guild)) +
geom_boxplot() +
labs(title = "Moisture Levels by Trophic Guild", x = "Trophic Guild", y = "Moisture") +
theme_minimal()
})
}
shinyApp(ui, server)
View(nematode)
