library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
p <- homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(na.rm=T, position="dodge")
p + theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q <- homerange %>%
ggplot(aes(x=log10.mass, y = log10.preymass, color = taxon))+
geom_point()
q <- homerange %>%
ggplot(aes(x=log10.mass, y = log10.preymass, color = taxon))+
geom_point(na.rm = T)
q + theme_grey()+
labs(title = "mass vs preymass", x = "mass", y = "preymass")
q + theme_linedraw()+
labs(title = "mass vs preymass", x = "mass", y = "preymass")
p+theme_linedraw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
p+theme_linedraw()+
theme(legend.position = "top", #adjust position of the legend
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
p+theme_linedraw()+
theme(legend.position = "left", #adjust position of the legend
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
p+theme_linedraw()+
theme(legend.position = "bottom", #adjust position of the legend
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
install.packages("ggthemes")
library(ggthemes)
ls("package:ggthemes")[grepl("theme_", ls("package:ggthemes"))]
p +
theme_stata()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q + theme_map()
q + theme_few()
q + theme_wsj()
display.brewer.pal(5,"Accent") #qualitative palette
?RColorBrewer
p+scale_fill_brewer(palette = "Set2")+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q + scale_color_brewer([palette = "Dark2"])
q + scale_color_brewer(palette = "Dark2")
q + scale_color_brewer(palette = "Pastel1")
q + scale_color_brewer(palette = "Pastel2")
q + scale_color_brewer(palette = "Set3")
q + scale_color_brewer(palette = "Paired")
colors <- paletteer::palettes_d_names
my_palette <- paletteer_d("ggsci::nrc_npg")
barplot(rep(1,6), axes=FALSE, col=my_palette)
q + scale_color_brewer(palette = "Pastel2")
q + scale_colour_brewer(palette = "Pastel2")
q + scale_colour_brewer(palette = "4-class Reds")
q + scale_colour_brewer(palette = "4-Class Reds")
q + scale_colour_brewer("4-Class Reds")
q + scale_colour_brewer("4-Class Reds")
q + scale_colour_brewer(palette = "Ink")
barplot(rep(1,7), axes=FALSE, col=my_palette)
p+scale_fill_manual(values=my_palette)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
my_palette <- paletteer_d("ggsci::Ink")
my_palette <- paletteer_d("ggsci::ink")
my_palette <- paletteer_d("ggsci::startrek")
my_palette <- paletteer_d("ggsci::Startrek")
my_palette <- paletteer_d("ggsci::uniform_startrek")
barplot(rep(1,7), axes=FALSE, col=my_palette)
p+scale_fill_manual(values=my_palette)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
my_palette <- paletteer_d("ggsci::Prince")
View(colors)
my_palette <- paletteer_d("ghibli::PonyoMedium")
barplot(rep(1,7), axes=FALSE, col=my_palette)
q+scale_fill_manual(values=my_palette)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q+scale_colour_brewer(values=my_palette)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q+theme_classic()+
scale_colour_brewer(values=my_palette)+
q+theme_classic()+
scale_colour_brewer(values=my_palette)
q+theme_classic()+
scale_colour_manual(values=my_palette)
my_palette <- paletteer_d("Metbrewer::hiroshige")
my_palette <- paletteer_d("MetBrewer::Hiroshige")
barplot(rep(1,7), axes=FALSE, col=my_palette)
barplot(rep(1,10), axes=FALSE, col=my_palette)
q+theme_classic()+
scale_colour_manual(values=my_palette)
homerange %>%
ggplot(aes(x=taxon, y=log10.mass, fill=trophic.guild))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass, fill=taxon))+
geom_boxplot()+
facet_wrap(~trophic.guild, ncol=2, labeller=label_both)+ #wrap by trophic guild into two columns
theme(axis.text.x = element_text(angle = 60, hjust=1),
legend.position = "none",
strip.text = element_text(size = 12, face = "bold"))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_grid(trophic.guild~.)+
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_grid(.~trophic.guild)+
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_grid(trophic.guild~thermoregulation)+
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=log10.mass, y = thermoregulation))+
geom_density()+
face_wrap(~trophic.guild, ncol=2, labeller=label_both)
homerange %>%
ggplot(aes(x=log10.mass, y = thermoregulation))+
geom_density()+
facet_wrap(~trophic.guild, ncol=2, labeller=label_both)
homerange %>%
ggplot(aes(x=log10.mass))+
geom_density()+
facet_wrap(~thermoregulation, ncol=2, labeller=label_both)
homerange %>%
ggplot(aes(x=log10.mass))+ #since its distribution use density
geom_density(color = "blue")+
facet_wrap(~thermoregulation, ncol=2, labeller=label_both)
homerange %>%
ggplot(aes(x=log10.mass))+ #since its distribution use density
geom_density(fill = "steelblue")+
facet_wrap(~thermoregulation, ncol=2, labeller=label_both)
homerange %>%
ggplot(aes(x=log10.mass))+ #since its distribution use density
geom_density(fill = "steelblue", alpha = 0.6)+
facet_wrap(~thermoregulation, ncol=2, labeller=label_both)
homerange %>%
ggplot(aes(x=log10.mass))+ #since its distribution use density
geom_density(fill = "steelblue", alpha = 0.6)+
facet_grid(.~locomotion)
homerange %>%
ggplot(aes(x=log10.mass))+ #since its distribution use density
geom_density(fill = "steelblue", alpha = 0.6)+
facet_grid(.~locomotion)
homerange %>%
ggplot(aes(x=log10.mass))+ #since its distribution use density
geom_density(fill = "steelblue", alpha = 0.6)+
facet_grid(thermoregulation~locomotion) #columns by rows, put locomotion into columns
library("tidyverse")
library("janitor")
library("lubridate") #this will help us manage dates
spider_records <- read_csv("data/spider_records.csv")
glimpse(spider_records) #let's have a quick look
table_A <- read_csv("data/table_A.csv")
table_B <- read_csv("data/table_B.csv")
table_A
table_B
inner_join(table_A, table_B, by="customer_ID")
left_join(table_A, table_B, by="customer_ID")
left_join(table_B, table_A, by="customer_ID") #joins by left table, customer 4 is not present on table A. vice verse would not have 3
left_join(table_A, table_B, by="customer_ID") #joins by left table, customer 4 is not present on table A. vice verse would not have 3
right_join(table_A, table_B, by="customer_ID")
full_join(table_A, table_B, by="customer_ID")
anti_join(table_A, table_B, by="customer_ID")
spiders_locs <- read_csv("data/spiders_locations.csv")
full_join(spider_records, spider_locs, by= "Accession")
full_join(spider_records, spiders_locs, by= "Accession")
left_join(spider_records, spiders_locs, by= "Accession")
right_join(spider_records, spiders_locs, by= "Accession")
anti_join(spider_records, spiders_locs, by= "Accession")
spiders_with_lovs <-
full_join(spider_records, spiders_locs, by= "Accession")
names(spiders_with_lovs)
day <- today()
day
str(day)
datetime <- now()
datetime
ymd(dateformat1)
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
ymd(dateformat1)
mdy(dateformat2)
dmy(dateformat3)
dmy(dateformat3)
mdy_hms(dateformat4)
ymd_hms(dateformat5)
write.csv(spiders_with_lovs, file="spiders_with_lovs.csv", row.names = F)
spiders_with_lovs %>%
dmy(Date)
install.packages("ggmap")
library(ggmap)
library(tidyverse)
library(janitor)
spiders_with_locs <-
full_join(spider_records, spiders_locs, by= "Accession")
names(spiders_with_locs)
write.csv(spiders_with_lovs, file="spiders_with_locs.csv", row.names = F)
register_stadiamaps("df7d4b33-d5e1-49bf-94f8-d32a109c561f", write = FALSE)
spiders <- read_csv("data/spiders_with_locs.csv")%>% clean_names()
spiders %>%
select(latitude, longitude) %>% #makes the base map, you have to tell what size of map you want
summary()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>% #makes the base map, you have to tell what size of map you want
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.03) #f is the fraction of the bounding box to add to the range
map1 <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7)
map1 <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=5)
ggmap(map1)
map1 <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7)
ggmap(map1)
ggmap(map1) + #using layers not pipes
geom_point(data = spiders, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")
ggmap(map1) + #using layers not pipes
geom_point(data = spiders, aes(longitude, latitude), size=0.4, color = "red") +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")
ggmap(map1) + #using layers not pipes
geom_point(data = spiders, aes(longitude, latitude), size=0.4, color = "red") +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map1) + #using layers not pipes
theme_classic()+
geom_point(data = spiders, aes(longitude, latitude), size=0.4, color = "red") +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map1) + #using layers not pipes
geom_point(data = spiders, aes(longitude, latitude), size=0.4, color = "red") +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
sharks <- read_csv("data/SharkIncidents_1950_2022_220302.csv") %>%
clean_names() %>%
filter(longitude !="NA" & latitude !="NA") %>% # pulling out NA locations
mutate(longitude = as.numeric(longitude)) # converting longitude to numeric
sharks_dups <- sharks %>%
distinct(location, .keep_all = TRUE) # remove duplicate locations, but keep the remaining variables
sharks_dups %>%
select(longitude, latitude) %>%
summary()
lat <- c(-124.7, -117.1)
long <- c(32.59, 41.56)
bbox <- make_bbox(long, lat, f = 0.03)
map2 <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=6)
lat <- c(-124.7, -117.1)
long <- c(32.59, 41.56)
bbox <- make_bbox(long, lat, f = 0.03)
map2 <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=6)
lat <- c(32.59, 41.56)
long <- c(-124.7, -117.1)
bbox <- make_bbox(long, lat, f = 0.03)
map2 <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=6)
ggmap(map2) + #using layers not pipes
geom_point(data = spiders, aes(longitude, latitude), size=0.4, color = "red") +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map2) + #using layers not pipes
geom_point(data = sharks_dups, aes(longitude, latitude), size=0.4, color = "red") +
labs(x= "Longitude", y= "Latitude", title="Shark Locations")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
View(sharks_dups)
ggmap(map2) + #using layers not pipes
geom_point(data = sharks_dups, aes(x=longitude, y=latitude), size=0.4, color = "red") +
labs(x= "Longitude", y= "Latitude", title="Shark Locations")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map2)
sharks_fatal <- sharks_dups %>%
filter(injury == "fatal")
ggmap(map2) + #using layers not pipes
geom_point(data = sharks_dups, aes(x=longitude, y=latitude), size=0.4, color = "red") +
labs(x= "Longitude", y= "Latitude", title="Shark Attacks")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
sharks_fatal %>%
select(longitude, latitude)
sharks_fatal %>%
summary(longitude, latitude)
sharks_fatal %>%
select(longitude, latitude) %>%
summary()
lat <- c(32.85, 39.568)
long <- c(-123.8, -117.13)
bbox <- make_bbox(long, lat, f = 0.03)
map3 <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=6)
ggmap(map3)
ggmap(map3) + #using layers not pipes
geom_point(data = sharks_fatal, aes(x=longitude, y=latitude), size=0.4, color = "red") +
labs(x= "Longitude", y= "Latitude", title="Shark Attacks")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map3) + #using layers not pipes
geom_point(data = sharks_fatal, aes(x=longitude, y=latitude), size=0.4, color = "red") +
labs(x= "Longitude", y= "Latitude", title="Fatal Shark Attacks")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map3) + #using layers not pipes
geom_point(data = sharks_fatal, aes(x=longitude, y=latitude), size=1, color = "red") +
labs(x= "Longitude", y= "Latitude", title="Fatal Shark Attacks")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map3) + #using layers not pipes
geom_point(data = sharks_fatal, aes(x=longitude, y=latitude), size=1, color = "red", fill = "species") +
labs(x= "Longitude", y= "Latitude", title="Fatal Shark Attacks")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map3) + #using layers not pipes
geom_point(data = sharks_fatal, aes(x=longitude, y=latitude), size=1, color = "red", fill = species) +
labs(x= "Longitude", y= "Latitude", title="Fatal Shark Attacks")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map3) + #using layers not pipes
geom_point(data = sharks_fatal, aes(x=longitude, y=latitude), size=1, color = species) +
labs(x= "Longitude", y= "Latitude", title="Fatal Shark Attacks")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map3) + #using layers not pipes
geom_point(data = sharks_fatal, aes(x=longitude, y=latitude), size=1, color = "species") +
labs(x= "Longitude", y= "Latitude", title="Fatal Shark Attacks")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map3) + #using layers not pipes
geom_point(data = sharks_fatal, aes(x=longitude, y=latitude), size=1, color = "red") +
labs(x= "Longitude", y= "Latitude", title="Fatal Shark Attacks")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map3) + #using layers not pipes
geom_point(data = sharks_fatal, aes(x=longitude, y=latitude), size=10, color = "red") +
labs(x= "Longitude", y= "Latitude", title="Fatal Shark Attacks")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map3) + #using layers not pipes
geom_point(data = sharks_fatal, aes(x=longitude, y=latitude), size=1, color = "red") +
labs(x= "Longitude", y= "Latitude", title="Fatal Shark Attacks")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map3) + #using layers not pipes
geom_point(data = sharks_fatal, aes(x=longitude, y=latitude, fill = species)) +
labs(x= "Longitude", y= "Latitude", title="Fatal Shark Attacks")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map3) + #using layers not pipes
geom_point(data = sharks_fatal, aes(x=longitude, y=latitude, fill = mode)) +
labs(x= "Longitude", y= "Latitude", title="Fatal Shark Attacks")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
ggmap(map3) + #using layers not pipes
geom_point(data = sharks_fatal, aes(x=longitude, y=latitude, color = mode)) +
labs(x= "Longitude", y= "Latitude", title="Fatal Shark Attacks")+
theme(plot.title = element_text(size=rel(1.5), hjust = 0.5))
