library("tidyverse")
datasets::USPersonalExpenditure
?USPersonalExpenditure
expenditures <- USPersonalExpenditure %>%
as_tibble() %>% #this transforms the matrix into a data frame
mutate(expenditure = rownames(USPersonalExpenditure))
expenditures
expenditures %>%
pivot_longer(-expenditure,
names_to = "Year")
expenditures %>%
filter(expenditure == "Medical and Health") %>%
arrange(value)
expenditures %>%
pivot_longer(-expenditure,
names_to = "Year",
values_to = "amount")
expenditures %>%
filter(expenditure == "Medical and Health") %>%
arrange(amount)
expenditures <- expenditures %>%
pivot_longer(-expenditure,
names_to = "Year",
values_to = "amount")
expenditures %>%
filter(expenditure == "Medical and Health") %>%
arrange(amount)
expenditures <- USPersonalExpenditure %>%
as_tibble() %>% #this transforms the matrix into a data frame
mutate(expenditure = rownames(USPersonalExpenditure))
expenditures
expenditures <- expenditures %>%
pivot_longer(-expenditure,
names_to = "Year",
values_to = "amount")
expenditures <- USPersonalExpenditure %>%
as_tibble() %>% #this transforms the matrix into a data frame
mutate(expenditure = rownames(USPersonalExpenditure))
expenditures
expenditures %>%
pivot_longer(-expenditure,
names_to = "Year",
values_to = "amount")
expenditures %>%
pivot_longer(-expenditure,
names_to = "Year",
values_to = "amount")
filter(expenditure == "Medical and Health") %>%
arrange(amount)
expenditures %>%
pivot_longer(-expenditure,
names_to = "Year",
values_to = "amount") %>%
filter(expenditure == "Medical and Health") %>%
arrange(amount)
heartrate2 <- read_csv("data/heartrate2.csv")
heartrate2
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") #separate needs to know which coulumn you want to split into the two column names, define how they are separated with sep = "_" BUT it is not always the case
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") %>%
pivot_longer(-patient,
- sex,
names_to = "Drug",
values_to = "Heartrate")#separate needs to know which coulumn you want to split into the two column names, define how they are separated with sep = "_" BUT it is not always the case
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") %>%
pivot_longer(-patient,
names_to = "Drug",
values_to = "Heartrate")#separate needs to know which coulumn you want to split into the two column names, define how they are separated with sep = "_" BUT it is not always the case
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") %>%
pivot_longer(-c(patient, sex),
names_to = "Drug",
values_to = "Heartrate")#separate needs to know which coulumn you want to split into the two column names, define how they are separated with sep = "_" BUT it is not always the case
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1)
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1) %>%
mutate(patient=str_remove(patient, "_")) #strngr , says to remove the underscore from patient
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1) %>%
mutate(patient=str_remove(patient, "_")) %>%
pivot_longer(-c(patient, sex),
names_to = "Drug",
values_to = "Heartrate")#strngr , says to remove the underscore from patient
heartrate3 <- heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1) %>%
mutate(patient=str_remove(patient, "_")) %>%
pivot_longer(-c(patient, sex),
names_to = "Drug",
values_to = "Heartrate") %>%
arrange(drug)
heartrate2 <- heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1) %>%
mutate(patient=str_remove(patient, "_")) %>%
pivot_longer(-c(patient, sex),
names_to = "Drug",
values_to = "Heartrate")#strngr , says to remove the underscore from patient
heartrate3 <- heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1) %>%
mutate(patient=str_remove(patient, "_")) %>%
pivot_longer(-c(patient, sex),
names_to = "Drug",
values_to = "Heartrate") %>%
arrange(drug)
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1) %>%
mutate(patient=str_remove(patient, "_")) %>%
pivot_longer(-c(patient, sex),
names_to = "Drug",
values_to = "Heartrate")#strngr , says to remove the underscore from patient
heartrate2 <- read_csv("data/heartrate2.csv")
heartrate2
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1) %>%
mutate(patient=str_remove(patient, "_")) %>%
pivot_longer(-c(patient, sex),
names_to = "Drug",
values_to = "Heartrate")#strngr , says to remove the underscore from patient
heartrate3 <- heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1) %>%
mutate(patient=str_remove(patient, "_")) %>%
pivot_longer(-c(patient, sex),
names_to = "Drug",
values_to = "Heartrate") %>%
arrange(drug)
heartrate3 <- heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") %>%
pivot_longer(-c(patient, sex),
names_to = "Drug",
values_to = "Heartrate") %>%
arrange(drug)
heartrate3 <- heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") %>%
pivot_longer(-c(patient, sex),
names_to = "Drug",
values_to = "Heartrate") %>%
arrange(Drug)
heartrate3 <- heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") %>%
pivot_longer(-c(patient, sex),
names_to = "Drug",
values_to = "Heartrate") %>%
arrange(Drug)
heartrate3
heartrate3 %>%
unite(patient_sex, "patient", "sex", sep = "_")
heartrate3 <- heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") %>%
pivot_longer(-c(patient, sex),
names_to = "Drug",
values_to = "Heartrate")
heartrate3
tb_data <- read_csv("data/tb_data.csv")
tb_data
tb_data %>%
pivot_wider(names_from = "key", #the observations under key will become new columns
values_from = "value") #the values under value will be moved to the new columns
gene_exp <- read_csv("data/gene_exp.csv")
gene_exp
gene_exp %>%
pivot_wider(names_from = "type")
gene_exp %>%
pivot_wider(names_from = "type",
values_from = "L4_values")
beachbugs
beachbugs <- read_csv("data/beachbugs_long.csv")
beachbugs <- read_csv("data/beachbugs_long.csv")
beachbugs
beachbugs %>%
pivot_wider(names_from = "site",
values_from = "buglevels")
beachbugs %>%
pivot_longer(-year,
names_to = "Beaches",
values_to = "BugCounts")
beachbugs_wide <- beachbugs %>%
pivot_wider(names_from = "site",
values_from = "buglevels")
beachbugs_wide %>%
pivot_longer(-year,
names_to = "Beaches",
values_to = "BugCounts")
library(tidyverse)
library(naniar)
library(janitor)
names(iris)
glimpse(iris)
ggplot(data=iris, #data
mapping=aes(x=Species, y=Petal.Length)) #mapped the aesthetics
ggplot(data=iris, #data
mapping=aes(x=Species, y=Petal.Length))+
geon_boxplot()
ggplot(data=iris, #data
mapping=aes(x=Species, y=Petal.Length))+
geom_boxplot()
ggplot(data=iris, #data
mapping=aes(x=Sepal.Length, y=Sepal.Width))+
geom_point()
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange
any.NA(homerange)
anyNA(homerange)
glimpse(homerange)
homerange
ggplot(data=homerange,
mapping=aes(x=log10_mass, y=log10_hra))+
geom_point()
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv") %>% clean_names()
homerange
ggplot(data=homerange,
mapping=aes(x=log10_mass, y=log10_hra))+
geom_point()
ggplot(data=homerange,
mapping=aes(x=log10_mass, y=log10_hra))+
geom_jitter()
ggplot(data=homerange,
mapping=aes(x=log10_mass, y=log10_hra))+
geom_point()+
geom_smooth(method=lm, se=T)
ggplot(data=homerange,
mapping(aes(x=log10_hra, y=log10_preymass))+
geom_point()
ggplot(data=homerange,
mapping(aes(x=log10_hra, y=log10_preymass))+
geom_point())
ggplot(data=homerange,
mapping=aes(x=log10_hra, y=log10_preymass))+
geom_point()
ggplot(data=homerange,
mapping=aes(x=log10_hra, y=log10_preymass))+
geom_point()+
geom_smooth(method=lm, se=T)
ggplot(data=homerange,
mapping=aes(x=log10_hra, y=log10_preymass))+
geom_point()+
geom_smooth(method=lm, se=F)
ggplot(data=homerange,
mapping=aes(x=log10_hra, y=log10_preymass))+
geom_point()+
geom_smooth(method=lm, se=F, na.rm=T)
ggplot(data=homerange,
mapping=aes(x=log10_hra, y=log10_preymass))+
geom_point(na.rm=T)+
geom_smooth(method=lm, se=F, na.rm=T)
names(homerange)
homerange %>%
count(trophic_guild)
homerange %>%
ggplot(aes(x=trophic_guild))+
geom_bar()
homerange %>%
filter(family=="salmonidoe") %>%
select(common_name, log10_mass)
View(homerange)
homerange %>%
filter(family=="salmonidae") %>%
select(common_name, log10_mass)
homerange %>%
filter(family=="salmonidae") %>%
select(common_name, log10_mass) %>%
ggplot(aes(x=common_name, y=log10_mass))+
geom_col()
homerange %>%
filter(family=="salmonidae") %>%
select(common_name, log10_mass) %>%
ggplot(aes(x=common_name, y=log10_mass))+
geom_col()+
coord_flip()
homerange %>%
filter(family=="salmonidae") %>%
select(common_name, log10_mass) %>%
ggplot(aes(x=common_name, y=log10_mass))+
geom_bar(stat="identity")
homerange %>%
filter(taxon=="mammals")
homerange %>%
filter(taxon=="mammals") %>%
count(taxon)
homerange %>%
filter(taxon=="mammals") %>%
ggplot(aes(x=order))+
geom_bar(stat="identity")
homerange %>%
filter(taxon=="mammals") %>%
ggplot(aes(x=trophic_guild))+
geom_bar()
homerange %>%
filter(taxon=="mammals") %>%
ggplot(aes(x=trophic_guild, y=n))+
geom_col()
homerange %>%
filter(class=="mammalia")
homerange %>%
filter(class=="mammalia") %>%
top_n(-10, log10_mass)
homerange %>%
filter(class=="mammalia") %>%
top_n(-10, log10_mass) %>%
select(common_name, log10_mass)
homerange %>%
filter(class=="mammalia") %>%
top_n(-10, log10_mass) %>%
select(common_name, log10_mass) %>%
ggplot(aes(x=common_name, y=log10_mass))+
geom_col()+
coord_flip()
